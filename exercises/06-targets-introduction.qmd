# {targets}: setup

TODO

## `_targets.R`

The `_targets.R` is where we declare our {targets} workflow. It is an R file saved in the root directory of your project. The generalized structure of a `_targets.R` file is:

- Load packages
- Set options and variables
- End in a list of targets

Note: a `_targets.R` **must** end in a list of targets. 

A simple `_targets.R` script could be:

```r
library(targets)

data(mtcars)

c(
    tar_target(
        histogram_mpg, 
        hist(mtcars$mpg)
    )
)
```

### Exercise: `_targets.R`

Instruction: make a new file in the root directory of your project named `_targets.R`. At the top, load {targets} and at the bottom put an empty list `c( )`


Sometimes, when a project gets really big, you can define your list of targets in separate files and bring them altogether in the `_targets.R` file. See example TODO




## Packages

To declare which packages we need across all our functions, we have two main options:

1. List them with `library()` calls at the top of our `_targets.R` script (more on that soon)
2. List them all in a `R/packages.R` script and source that script. 

We prefer the second approach because it keeps our `_targets.R` tidier, and helps us setup {renv} package versioning later. 

### Exercise: `packages.R`

Instruction: make a new script called `packages.R` in the `R/` directory. Go through your test scripts for your functions and add all the packages you used there. 

For example:

`R/packages.R`

```r
library(targets)
library(data.table)
library(ggplot2)
```
1. Make a packages.R script, (because it's centralized, gets loaded by targets, etc, also helps later for renv+conflicted)
1. Put the functions prepare_csv, summarize counts and plot into targets with c(tar_target(, ...) (name needs to not clash with function, options for targets we'll look at in detail later but for now simple just 3 targets)
1. Run tar_visnetwork
1. Run tar_make
1. Run tar_read
1. Make an edit to something
1. Rerun tar_visnetwork
1. Rerun tar_make
1. Run tar_read
