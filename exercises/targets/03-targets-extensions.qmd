# Extensions

Let's look at a {targets} workflow that more closely resembles what a full project would look like including figures, model, output, tables and a manuscript object. We'll start with a demo, so we can show off some of the power and extended features of {targets}, then we can work piece by piece to build it up through exercises. 

Also check out some examples of full {targets} workflows that we've developed to get a sense for the various applications and approaches that can be used. 

- data cleaning and preparation workflow prepare locs
- movement ecology method issa 
- remote sensing / spatial application rgee extract
- Bayesian models with {brms} statistical rethinking colearning solutions
- downloading tables from google sheets, full manuscript render as website and pdf comprehensive exam




## Demo

1. `tar_visnetwork()`
1. `tar_make()`
1. Look at new files under `figures/` and `output/`
1. Look at rendered manuscript
1. Read sums


Now to make some changes

1. Edit the data file, rerun tar make
1. Delete an output figure, rerun tar make
1. Add a filter step before group counts and 


**TODO**
TODO: better sections -----
TODO: look for tar_group_by_command source
TODO: open PR add test for is_grouped_df from tar_group_by
TODO: simplest way to get dynamic branch indexing vars


format = file
delete figure
run tar make

    # Files
    tar_target(
        file_counts,
        path_counts,
        format = 'file'
    ),



group by
 # Group
    tar_group_by(
        group_counts,
        prep_counts,
        island
    ),

dynamic branching over groups
pattern = map()
 

    # Sum counts by group
    tar_target(
        sum_groups,
        sum_counts(group_counts, 'island'),
        pattern = map(group_counts)
    ),


plot by group
iteration = list

    # Plot by group
    tar_target(
        plot_groups,
        plot_xy(group_counts, x_col, y_col),
        pattern = map(group_counts),
        iteration = 'list'
    ),


save plots
format file
iteration list
map over multiple
    # Save plots
    tar_target(
        save_plot,
        ggsave(filename = file.path('figures', group_counts[1, ]$island),
               plot = plot_groups,
               device = 'png'),
        pattern = map(plot_groups, group_counts),
        format = 'file',
        iteration = 'list'


## External files

{targets} can be used to track external files for changes. 




## {tarchetypes}


### `tar_group_by()`



TODO 

tar_group_by
plot
iteration = list
pattern = map()
format = file



## Recommendations
TODO

start your next project with targets, easier to start then refactor a whole project especially if it isnt using functions


Git Ignore the _targets/ directory 

## Bonus
TODO

format = file
tar_option_set
- fs 
- error
